service: serverless-studentapi-dynamodb

stage: ${opt:stage}

custom:
    dynamodb:
        start:
            port: 8000
            inMemory: true
            migrate: true
            migration: 
                dir: offline/migrations

provider:
    name: aws
    runtime: nodejs10.x
    timeout: 30
    region: ${opt:region, 'ap-south-1'}
    custom:
    defaultStage: dev
    profiles:
      dev: devProfile
  

environment: 
    DYNAMODB_TABLE: Students
    iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:BatchGet*
        - dynamodb:DescribeStream
        - dynamodb:DescribeTable
        - dynamodb:Get*
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:BatchWrite*
        - dynamodb:CreateTable
        - dynamodb:Delete*
        - dynamodb:Update*
        - dynamodb:PutItem
     Resource: arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}
   

  
    
functions:
  get:
    handler: students/getStudents.handler
    events:
      - http:
          path: /students
          method: get
          cors: true
        

  create:
    handler: students/addStudents.handler
    events:
      - http:
          path: /students
          method: post
          cors: true